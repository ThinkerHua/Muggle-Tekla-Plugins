<!--==============================================================================
 *  Muggle Tekla-Plugins - tools and plugins for Tekla Structures
 *
 *  Copyright © 2025 Huang YongXing.
 *
 *  This library is free software, licensed under the terms of the GNU
 *  General Public License as published by the Free Software Foundation,
 *  either version 3 of the License, or (at your option) any later version.
 *  You should have received a copy of the GNU General Public License
 *  along with this program. If not, see<http://www.gnu.org/licenses/> .
 *==============================================================================
 *  MoveToElevation.xaml: view for the move to elevation operation.
 *  written by Huang YongXing - thinkerhua@hotmail.com
 *==============================================================================-->
<Page x:Class="Muggle.TeklaPlugins.MainWindow.Views.MoveToElevation"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:Muggle.TeklaPlugins.MainWindow.Views"
      xmlns:vm="clr-namespace:Muggle.TeklaPlugins.MainWindow.ViewModels"
      Title="Elevation"
      d:DesignHeight="450"
      d:DesignWidth="800"
      d:DataContext="{d:DesignInstance Type=vm:MoveToElevationViewModel}"
      d:Background="AliceBlue"
      mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <Style x:Key="element" TargetType="FrameworkElement">
                <Setter Property="Margin" Value="{StaticResource UniformMargin}" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource element}" />
            <Style TargetType="TextBox" BasedOn="{StaticResource element}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="20" />
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource element}">
                <Setter Property="Template" Value="{StaticResource ButtonStyle1}" />
                <Setter Property="Padding" Value="4,2,4,2" />
                <Setter Property="Height" Value="30" />
            </Style>
            <Style TargetType="RadioButton" BasedOn="{StaticResource element}" />
            <Style TargetType="Separator" BasedOn="{StaticResource element}" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" MinWidth="100" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" Text="Target elevation" />
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TargetElevation, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat={}{0:F3}}" />
        <RadioButton Grid.Row="1"
                     Grid.Column="0"
                     HorizontalAlignment="Left"
                     GroupName="absolutely"
                     Content="Absolutely"
                     IsChecked="{Binding IsAbsolutely, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <RadioButton Grid.Row="1"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     HorizontalAlignment="Right"
                     GroupName="absolutely"
                     Content="Relative"
                     IsChecked="{Binding IsAbsolutely, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverter}}" />

        <Separator Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" />

        <RadioButton Grid.Row="3"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     HorizontalAlignment="Left"
                     Content="Top"
                     IsChecked="{Binding ElevationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource enumToBool}, ConverterParameter={x:Static vm:MoveToElevationViewModel+ElevationTypeEnum.Top}}" />
        <RadioButton Grid.Row="3"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     HorizontalAlignment="Center"
                     Content="Middle"
                     IsChecked="{Binding ElevationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource enumToBool}, ConverterParameter={x:Static vm:MoveToElevationViewModel+ElevationTypeEnum.Middle}}" />
        <RadioButton Grid.Row="3"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     HorizontalAlignment="Right"
                     Content="Bottom"
                     IsChecked="{Binding ElevationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource enumToBool}, ConverterParameter={x:Static vm:MoveToElevationViewModel+ElevationTypeEnum.Bottom}}" />

        <Button Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Padding="5,2,5,2"
                HorizontalAlignment="Center"
                Content="Move to this elevation"
                Command="{Binding MoveToElevationCommand}" />
    </Grid>
</Page>
